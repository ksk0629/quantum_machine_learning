[tool.poetry]
name = "quantum machine learning package"
version = "0.1.0"
description = "A small quantum machine learning package"
authors = ["ksk0629 <neko.to.tomodachi.muse@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "example_package", from = "quantum_machine_learning" }]
repository = "https://github.com/ksk0629/quantum_machine_leearning"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.12"
matplotlib = "^3.10.1"
pylatexenc = "^2.10"
tqdm = "^4.67.1"
qiskit = "^2.0.0"
torch = "^2.6.0"
torchvision = "^0.21.0"
qiskit-aer = "^0.17.0"
scikit-learn = "^1.6.1"

[tool.poetry.scripts]
run_example = "src.example_package.example:main"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
sphinx = "^8.2.3"
black = "^25.1.0"
jupyter = "^1.1.1"
notebook = "^7.3.3"
mypy = "^1.15.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
markers = [
    "encoder: marks tests for Encoder family classes",
    "layer: marks tests for Layer family classes",
    "preprocessor: marks tests for Preprocessor class",
    "postprocessor: marks tests for Postprocessor class",
    "path_getter: marks tests for PathGetter family classes",
    "gate: marks tests for Gate family classes",
    "utils: marks tests for Utils family classes"
]
pythonpath = "./quantum_machine_learning_utils"
testpaths = ["tests",]

[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
check_untyped_defs = true

[tool.coverage.report]
skip_empty = true  
skip_covered = true  # Only show files that are not 100% covered.
exclude_lines = [
    "@(abc\\.)?abstractmethod", # Skip @abstractmethod
]
omit = [
    "./tests/mocks.py",  # Skip the mock class file.
    "./quantum_machine_learning_utils/dataset_gallery/dataset_gallery.py", # Skip the class for just dataset.
]